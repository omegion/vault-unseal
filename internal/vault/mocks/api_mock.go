// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/omegion/vault-unseal/internal/vault (interfaces: APIInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	api "github.com/hashicorp/vault/api"
)

// MockAPIInterface is a mock of APIInterface interface.
type MockAPIInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAPIInterfaceMockRecorder
}

// MockAPIInterfaceMockRecorder is the mock recorder for MockAPIInterface.
type MockAPIInterfaceMockRecorder struct {
	mock *MockAPIInterface
}

// NewMockAPIInterface creates a new mock instance.
func NewMockAPIInterface(ctrl *gomock.Controller) *MockAPIInterface {
	mock := &MockAPIInterface{ctrl: ctrl}
	mock.recorder = &MockAPIInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAPIInterface) EXPECT() *MockAPIInterfaceMockRecorder {
	return m.recorder
}

// SealStatus mocks base method.
func (m *MockAPIInterface) SealStatus() (api.SealStatusResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SealStatus")
	ret0, _ := ret[0].(api.SealStatusResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SealStatus indicates an expected call of SealStatus.
func (mr *MockAPIInterfaceMockRecorder) SealStatus() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SealStatus", reflect.TypeOf((*MockAPIInterface)(nil).SealStatus))
}

// Unseal mocks base method.
func (m *MockAPIInterface) Unseal(arg0 string) (api.SealStatusResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Unseal", arg0)
	ret0, _ := ret[0].(api.SealStatusResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Unseal indicates an expected call of Unseal.
func (mr *MockAPIInterfaceMockRecorder) Unseal(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Unseal", reflect.TypeOf((*MockAPIInterface)(nil).Unseal), arg0)
}
